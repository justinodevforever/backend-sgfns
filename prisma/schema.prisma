// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Role{
  id String @id @default(uuid())
  role String @unique
  users UserRoles[]
}
model Usuario{
  id String @id @default(uuid())
  nome String
  email String @unique
  password String
  bi String @unique
  contacto String 
  permissions UserPermission[]
  profile ProfileUser[]
  propina Propina[]
  servico Servico[]
  exameEspecial ExameEspecial[]
  recurso Recurso[]
  cadeiraAtraso CadeiraAtraso[]
  declaracao Declaracao[]
  reconfirmacao Reconfirmacao[]
}
model UserRoles{
  id String @id @default(uuid())
  role Role @relation(fields: [fk_role], references: [id])
  fk_role String
}
model Permission {
  id String @id @default(uuid())
  permissao String
  users UserPermission []
}

model UserPermission {
  id String @id @default(uuid())
  user Usuario @relation(fields: [fk_user], references: [id])
  fk_user String
  permission Permission @relation(fields: [fk_permission], references: [id])
  fk_permission String
} 
model TipoServico{
  id String @id @default(uuid())
  tipo String? @unique
  valor Decimal
   servico Servico[]
}
model AnoFrequencia{
  id String @id @default(uuid())
  ano String @unique
  disciplina Disciplina[]
  curso CursoFrequencia[]
    exameEspecial ExameEspecial[]
     cadeiraAtrasos CadeiraAtraso[]
    recursos Recurso[]
    reconfirmacoa Reconfirmacao[]
    estudante Estudante[]
    
}
model AnoLectivo{
  id String @id @default(uuid())
  ano String @unique
    exameEspecial ExameEspecial[]
     cadeiraAtrasos CadeiraAtraso[]
    recursos Recurso[]
    propina Propina[]
     servico Servico[]
     reconfirmacao Reconfirmacao[]
}
model ListaRecurso{
  id String @id @default(uuid())
  recurso Recurso @relation(fields: [fk_recurso], references: [id])
  fk_recurso String
  
}
model Estudante{
  id String @id @default(uuid())
  nome String 
  contacto String? @unique
  bi String @unique
  regime String
  sexo String
  turma String?
  frequencia AnoFrequencia @relation(fields: [fk_frequencia], references: [id])
  fk_frequencia String
  curso Curso @relation(fields: [fk_curso],references: [id])
    fk_curso String 
    exameEspecial ExameEspecial[]
    listaRecurso CadeiraAtraso[]
    recursos Recurso[]
    propina Propina[]
    servico Servico[]
    reconfirmacao Reconfirmacao[]
    pagamentoFolha PagamentoFolha[]
    declaracao Declaracao[]
}

model Curso{
  id String @id @default(uuid())
  curso String @unique
  disciplinas Disciplina[]
  frquencias CursoFrequencia[]
  estudantes Estudante[]
    exameEspecial ExameEspecial[]
    cadeiraAtrasos CadeiraAtraso[]
    recursos Recurso[]
    servico Servico[]
    reconfirmacao Reconfirmacao[]
}
model Declaracao{
  id String @id @default(uuid())
  dataSolicitacao String?
  estudante Estudante @relation(fields: [fk_estudante],references: [id])
   fk_estudante String
   frequencia String
  desc String
  createAd DateTime @default(now())
   usuario Usuario @relation(fields: [fk_user],references: [id])
    fk_user String 
}
model Semestre{
  id String @id @default(uuid())
  nome String @unique
  numero Int
  disciplinas Disciplina[]
    exameEspecial ExameEspecial[]
     cadeiraAtrasos CadeiraAtraso[]
    recursos Recurso[]
    propina Propina[]
    reconfirmacao Reconfirmacao[]
   
}
model Disciplina{
  id String @id @default(uuid())
  nome String
  abreviatura String?
  frequencia AnoFrequencia @relation(fields: [fk_ano],references: [id])
    fk_ano String
  semestre Semestre @relation(fields: [fk_semestre],references: [id])
    fk_semestre String
  curso Curso @relation(fields: [fk_curso],references: [id])
    fk_curso String
  exameEspecial ExameEspecial[]
  cadeiraAtrasos CadeiraAtraso[]
  recursos Recurso[]
}
model Reconfirmacao {
id String @id @default(uuid())
valor Int
rupe BigInt? @unique
dataSolicitacao String?
createdAt DateTime @default(now())
semestre Semestre @relation(fields: [fk_semestre],references: [id])
  fk_semestre String
curso Curso @relation(fields: [fk_curso],references: [id])
  fk_curso String
  anoLectivo AnoLectivo @relation(fields: [fk_ano],references: [id])
  fk_ano String
  estudante Estudante @relation(fields: [fk_estudante],references: [id])
  fk_estudante String
  usuario Usuario @relation(fields: [fk_user],references: [id])
  fk_user String
  frequencia AnoFrequencia @relation(fields: [fk_frequencia],references: [id])
  fk_frequencia String
}
model ExameEspecial{
  id String @id @default(uuid())
  valor String
  createdAt DateTime @default(now())
 rupe BigInt
 dataSolicitacao String?
estudante Estudante @relation(fields: [fk_estudante],references: [id])
  fk_estudante String 
AnoFrequncia AnoFrequencia @relation(fields: [fk_frquencia],references: [id])
  fk_frquencia String
anoLectivo AnoLectivo @relation(fields: [fk_ano],references: [id])
  fk_ano String
Curso Curso @relation(fields: [fk_curso],references: [id])
  fk_curso String
disciplina Disciplina @relation(fields: [fk_disciplina],references: [id])
  fk_disciplina String 
semestre Semestre @relation(fields: [fk_semestre],references: [id])
  fk_semestre String
 usuario Usuario @relation(fields: [fk_user],references: [id])
    fk_user String 

}
model CadeiraAtraso{
  id String @id @default(uuid())
  valor String
   dataSolicitacao String?
  createdAt DateTime @default(now())
  rupe BigInt @unique
  estudante Estudante @relation(fields: [fk_estudante],references: [id])
    fk_estudante String 
  AnoFrequncia AnoFrequencia @relation(fields: [fk_frquencia],references: [id])
    fk_frquencia String
  anoLectivo AnoLectivo @relation(fields: [fk_ano],references: [id])
    fk_ano String
  Curso Curso @relation(fields: [fk_curso],references: [id])
    fk_curso String
  disciplina Disciplina @relation(fields: [fk_disciplina],references: [id])
    fk_disciplina String 
  semestre Semestre @relation(fields: [fk_semestre],references: [id])
    fk_semestre String
   usuario Usuario @relation(fields: [fk_user],references: [id])
    fk_user String 

}
model Recurso{
  id String @id @default(uuid())
  valor String
  createdAt DateTime @default(now())
  rupe BigInt @unique
  estudante Estudante @relation(fields: [fk_estudante],references: [id])
    fk_estudante String 
  AnoFrequencia AnoFrequencia @relation(fields: [fk_frquencia],references: [id])
    fk_frquencia String
  anoLectivo AnoLectivo @relation(fields: [fk_ano],references: [id])
    fk_ano String
  Curso Curso @relation(fields: [fk_curso],references: [id])
    fk_curso String
  disciplina Disciplina @relation(fields: [fk_disciplina],references: [id])
    fk_disciplina String 
  usuario Usuario @relation(fields: [fk_user],references: [id])
    fk_user String 
  semestre Semestre @relation(fields: [fk_semestre],references: [id])
    fk_semestre String
  listaRecurso ListaRecurso[]
   dataSolicitacao String?

}
model ProfileUser{
  id String @id @default(uuid())
  nome String @unique
  legenda String
  usuario Usuario @relation(fields: [fk_user], references: [id])
  fk_user String

}


model Mes{
  id String @id @default(uuid())
  mes String?
  algarismo Int
  propina Propina[]
}

model Propina{
  id String @id @default(uuid())
  valor Int?
  createdAt DateTime @default(now())
  rupe BigInt @unique
  estudante Estudante @relation(fields: [fk_estudante],references: [id])
    fk_estudante String 
  anoLectivo AnoLectivo @relation(fields: [fk_ano],references: [id])
    fk_ano String
  mes Mes @relation(fields: [fk_mes],references: [id])
    fk_mes String
  semestre Semestre @relation(fields: [fk_semestre],references: [id])
    fk_semestre String
  usuario Usuario @relation(fields: [fk_user],references: [id])
    fk_user String
     dataSolicitacao String?

}
model Servico{
  id String @id @default(uuid())
  tipo String
  dataSolicitacao String?
  createAd DateTime @default(now())
  formaPagamento String 
  estudante Estudante @relation(fields: [fk_estudante],references: [id])
    fk_estudante String 
  anoLectivo AnoLectivo @relation(fields: [fk_ano],references: [id])
    fk_ano String
  curso Curso @relation(fields: [fk_curso],references: [id])
    fk_curso String
  usuario Usuario @relation(fields: [fk_user],references: [id])
    fk_user String
  tipoServico TipoServico @relation(fields: [fk_tipo],references: [id])
    fk_tipo String

}
model CursoFrequencia{
  id String @id @default(uuid())
  curso Curso @relation(fields: [fk_curso], references: [id])
  fk_curso String
  frequencia AnoFrequencia @relation(fields: [fk_ano],references: [id])
    fk_ano String
}
model PagamentoFolha{
  id String @id @default(uuid())
  estudante Estudante @relation(fields: [fk_estudante],references: [id])
    fk_estudante String 

}
